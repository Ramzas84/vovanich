#include <iostream>
#include <vector>
#include <queue>

using namespace std;

void print (int x, int y, int z, char*** arr){
    for (int i = 0; i < x; ++i){
        for (int j = 0; j < y; ++j){
            for (int k = 0; k < z; ++k){
                printf("%c ", arr[i][j][k]);
            }
            printf("\n");
        }
        printf("\n");
    }
    printf("\n");
}
void printInt (int x, int y, int z, int*** arr){
    for (int i = 0; i < x; ++i){
        for (int j = 0; j < y; ++j){
            for (int k = 0; k < z; ++k){
                printf("%d ", arr[i][j][k]);
            }
            printf("\n");
        }
        printf("\n");
    }
    printf("\n");
}

bool coordsIsRigth (const int x, const int y, const int z,
                    int xForCheck, int yForCheck, int zForCheck){
    if ((xForCheck < 0) || (yForCheck < 0) || (zForCheck < 0)) return false;
    if ((xForCheck >= x) || (yForCheck >= y) || (zForCheck >= z)) return false;
    return true;
}

int xArr[6] = {0, 0, 0, 0, 1, -1};
int yArr[6] = {0, 0, 1, -1, 0, 0};
int zArr[6] = {1, -1, 0, 0, 0, 0};

struct Coord{
    int x, y, z;
    Coord() : x(0), y(0), z(0) {};
    Coord(int a, int b, int c) : x(a), y(b), z(c) {};
};

void step (int x, int y, int z, int xSt, int ySt, int zSt,
            bool*** visited, int*** longer, queue<Coord>& q, int& max){
    for (int i = 0; i < 6; ++i){
        int xTmp = xSt + xArr[i];
        int yTmp = ySt + yArr[i];
        int zTmp = zSt + zArr[i];
        if ((coordsIsRigth (x, y, z, xTmp, yTmp, zTmp)) 
            && (!visited[xTmp][yTmp][zTmp])){
            longer[xTmp][yTmp][zTmp] = ++max;
            visited[xTmp][yTmp][zTmp] = true;
            q.push({xTmp, yTmp, zTmp});
        }
    }
}

void goGraf (int x, int y, int z, int ySt, int zSt, bool*** visited, int*** longer){
    queue<Coord> q;
    q.push({0, ySt, zSt});
    visited[0][ySt][zSt] = true;
    longer[0][ySt][zSt] = 1;
    int max = 1;
    while (!q.empty()){
        Coord tmp = q.front();
        q.pop();
        step(x, y, z, tmp.x, tmp.y, tmp.z, visited, longer, q, max);
    }
    printf("%d\n", max);
}

int main (){
    int x, y, z;
    cin >> x >> y >> z;
    char*** plate;
    bool*** visited;
    int*** longer;
    plate = new char**[x];
    visited = new bool**[x];
    longer = new int**[x];
    for (int i = 0; i < x; ++i){
        plate[i] = new char*[y];
        visited[i] = new bool*[y];
        longer[i] = new int*[y];
        for (int j = 0; j < y; ++j){
            plate[i][j] = new char[z];
            visited[i][j] = new bool[z];
            longer[i][j] = new int[z];
            for (int k = 0; k < z; ++k){
                char a;
                cin >> a;
                plate[i][j][k] = a;
                if (a == '#') visited[i][j][k] = true;
                else visited[i][j][k] = false;
                longer[i][j][k] = 0;
            }
        }
    }
    int ySt, zSt;
    cin >> ySt >> zSt;
    --ySt;
    --zSt;
    //print (x, y, z, plate);
    goGraf (x, y, z, ySt, zSt, visited, longer);
    //printInt (x, y, z, longer);
    //printf("%d", longer[tmp.x][tmp.y][tmp.z]);
    return 0;
    
}
